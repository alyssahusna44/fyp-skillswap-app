-- ========================
-- SCHEMA
-- ========================

-- 1. Programs (MIIT only)
CREATE TABLE program (
    program_id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    level TEXT NOT NULL CHECK (
        level IN ('Foundation','Diploma','Bachelor','Master','PhD')
    )
);

-- 2. Subjects (tied directly to MIIT, not program-specific)
CREATE TABLE subject (
    subject_id SERIAL PRIMARY KEY,
    code TEXT NOT NULL UNIQUE,
    title TEXT NOT NULL,
    credit_hours INT
);

-- 3. Students (linked to Supabase Auth)
CREATE TABLE student (
    student_id UUID PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,
    name TEXT NOT NULL,
    program_id INT REFERENCES program(program_id) ON DELETE CASCADE,
    year_of_study INT
);

-- 4. Tutor Profile (extension of student)
CREATE TABLE tutor_profile (
    tutor_id UUID PRIMARY KEY REFERENCES student(student_id) ON DELETE CASCADE,
    bio TEXT,
    availability TEXT,
    hourly_rate NUMERIC(6,2)
);

-- Allow only @s.unikl.edu.my emails for signup
ALTER TABLE student
    ADD CONSTRAINT email_domain_chk CHECK (EXISTS (
        SELECT 1
        FROM auth.users u
        WHERE u.id = student.student_id
          AND u.email LIKE '%@s.unikl.edu.my'
    ));


-- 5. Tutor Subjects (which subjects a tutor can teach)
CREATE TABLE tutor_subject (
    tutor_id UUID REFERENCES tutor_profile(tutor_id) ON DELETE CASCADE,
    subject_id INT REFERENCES subject(subject_id) ON DELETE CASCADE,
    proof TEXT,
    grade TEXT,
    PRIMARY KEY (tutor_id, subject_id)
);

-- 6. Tutor Reviews (peer/student feedback)
CREATE TABLE tutor_review (
    review_id SERIAL PRIMARY KEY,
    tutor_id UUID REFERENCES tutor_profile(tutor_id) ON DELETE CASCADE,
    student_id UUID REFERENCES student(student_id) ON DELETE CASCADE,
    rating INT CHECK (rating BETWEEN 1 AND 5),
    comment TEXT,
    date TIMESTAMP DEFAULT NOW()
);

-- 7. Tutor Sessions (track completed sessions)
CREATE TABLE tutor_session (
    session_id SERIAL PRIMARY KEY,
    tutor_id UUID REFERENCES tutor_profile(tutor_id) ON DELETE CASCADE,
    student_id UUID REFERENCES student(student_id) ON DELETE CASCADE,
    subject_id INT REFERENCES subject(subject_id) ON DELETE CASCADE,
    date TIMESTAMP DEFAULT NOW(),
    status TEXT CHECK (status IN ('scheduled','completed','cancelled')) NOT NULL
);
