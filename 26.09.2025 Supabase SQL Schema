-- 1. Institutes
CREATE TABLE institute (
    institute_id SERIAL PRIMARY KEY,
    name TEXT NOT NULL UNIQUE
);

-- 2. Programs (linked to institute)
CREATE TABLE program (
    program_id SERIAL PRIMARY KEY,
    institute_id INT REFERENCES institute(institute_id) ON DELETE CASCADE,
    name TEXT NOT NULL,
    level TEXT NOT NULL CHECK (level IN ('Foundation','Diploma','Bachelor','Master','PhD','Certificate','Professional'))
);

-- 3. Subjects (tied to institute, not program)
CREATE TABLE subject (
    subject_id SERIAL PRIMARY KEY,
    institute_id INT REFERENCES institute(institute_id) ON DELETE CASCADE,
    code TEXT,
    title TEXT NOT NULL,
    credit_hours INT
);

-- 4. Students (each student belongs to a program)
CREATE TABLE student (
    student_id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    email TEXT UNIQUE NOT NULL,
    institute_id INT REFERENCES institute(institute_id) ON DELETE CASCADE,
    program_id INT REFERENCES program(program_id) ON DELETE CASCADE,
    year_of_study INT
);

-- 5. Tutor Profile (extension of student)
CREATE TABLE tutor_profile (
    tutor_id INT PRIMARY KEY REFERENCES student(student_id) ON DELETE CASCADE,
    bio TEXT,
    availability TEXT,
    hourly_rate NUMERIC(6,2)
);

-- 6. Tutor Subjects (which subjects a tutor can teach)
CREATE TABLE tutor_subject (
    tutor_id INT REFERENCES tutor_profile(tutor_id) ON DELETE CASCADE,
    subject_id INT REFERENCES subject(subject_id) ON DELETE CASCADE,
    proof TEXT,
    grade TEXT,
    PRIMARY KEY (tutor_id, subject_id)
);

-- 7. Tutor Reviews (peer/student feedback)
CREATE TABLE tutor_review (
    review_id SERIAL PRIMARY KEY,
    tutor_id INT REFERENCES tutor_profile(tutor_id) ON DELETE CASCADE,
    student_id INT REFERENCES student(student_id) ON DELETE CASCADE,
    rating INT CHECK (rating BETWEEN 1 AND 5),
    comment TEXT,
    date TIMESTAMP DEFAULT NOW()
);

-- 8. Tutor Sessions (track completed sessions)
CREATE TABLE tutor_session (
    session_id SERIAL PRIMARY KEY,
    tutor_id INT REFERENCES tutor_profile(tutor_id) ON DELETE CASCADE,
    student_id INT REFERENCES student(student_id) ON DELETE CASCADE,
    subject_id INT REFERENCES subject(subject_id) ON DELETE CASCADE,
    date TIMESTAMP DEFAULT NOW(),
    status TEXT CHECK (status IN ('scheduled','completed','cancelled')) NOT NULL
);
